!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.lmle=n():t.lmle=n()}(this,(()=>(()=>{var t={680:function(t){var n;n=()=>(()=>{"use strict";var t={d:(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},o:(t,n)=>Object.prototype.hasOwnProperty.call(t,n),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},n={};t.r(n),t.d(n,{Connection:()=>G,Element:()=>k,ElementGraph:()=>T,Generator:()=>z,Types:()=>p,config:()=>l});var e={};t.r(e),t.d(e,{__getArrayIt:()=>m,__replByIndex:()=>d});var o={};t.r(o),t.d(o,{getFunc:()=>A,getFuncElement:()=>y});var i={};t.r(i),t.d(i,{Default:()=>E,Generator:()=>C,copy:()=>O});var s={};t.r(s),t.d(s,{Default:()=>F,copy:()=>N});var r={};t.r(r),t.d(r,{connection:()=>s,element:()=>i});var c={};t.r(c),t.d(c,{setStandard:()=>w,standard:()=>j});var l={};t.r(l),t.d(l,{delay:()=>c,signal:()=>o,style:()=>r});var h={};t.r(h);var u={};t.r(u);var a={};t.r(a);var f={};t.r(f);var _={};t.r(_);var g={};t.r(g),t.d(g,{ConnectionFactory:()=>M});var p={};function m(t){return 0===t||1===t?t.toString():t}function d(t,n,e){return t.substring(0,e)+m(n)+t.substring(e+1)}function y(t,n){return A(t,n.in_connections?n.in_connections.length:0,n.out_connections.length,n.inArray?n.inArray():[""])}function A(t,n,e,o){const i=new Array(Math.pow(2,n)).fill("z".repeat(e));for(let n=0;n<t.length;n++)"object"==typeof t[n]&&"in"in t[n]&&"out"in t[n]?b(t[n],i):"object"==typeof t[n]&&"name"in t[n]&&"state"in t[n]&&"out"in t[n]&&o instanceof Array?x(t[n],i,o,e):S(t[n],i,e);return console.log(i),t=>i[parseInt(t,2)]||(i.length>0?"z".repeat(i[0].length):"")}function S(t,n,e){const o="z".repeat(e);for(let e=0;e<n.length;e++)if(JSON.stringify(n[e])===JSON.stringify(o)){n[e]=t;break}}function b(t,n){Array.isArray(t.in)&&(t.in=t.in.join(""));const e=v(t.in);for(let o=0;o<e.length;o++)n[parseInt(e[o],2)]=t.out}function v(t){if(!t.includes("x"))return[t];const n=[],e=t.indexOf("x");return n.push(...v(t.slice(0,e)+"0"+t.slice(e+1))),n.push(...v(t.slice(0,e)+"1"+t.slice(e+1))),n}function x(t,n,e,o,i){if("else"===t.name){const e="z".repeat(o);for(let o=0;o<n.length;o++)JSON.stringify(n[o])===JSON.stringify(e)&&(n[o]=t.out);return}if("object"==typeof t.out&&"name"in t.out&&"state"in t.out&&"out"in t.out)return void(i?(i.push([e.indexOf(t.name),t.state]),x(t.out,n,e,o,i)):x(t.out,n,e,o,[[e.indexOf(t.name),t.state]]));let s="x".repeat(e.length);if(i)for(let t=0;t<i.length;t++)s=d(s,i[t][1],i[t][0]);s=d(s,t.state,e.indexOf(t.name)),b({in:s,out:t.out},n)}t.r(p),t.d(p,{Factories:()=>g,Interface:()=>_,elementGraph:()=>u,server:()=>a,signal:()=>e,source:()=>h,style:()=>f});const E={class_name:"Element",disp:"ru_el_notation",display_name:!0,adder_name_array:[],preffix_name_in_connection:"$",suffix_name_in_connection:"",preffix_name_out_connection:"$",suffix_name_out_connection:"",display_in_connections:!0,display_out_connections:!0,display_line_in_connections:!0,display_line_out_connections:!0,rotate:"0",useTheme:!0,sizes:{MarginConn:{v:30,h:12},MarginCenter:{v:15,h:40,vb:10},strokeWidth:3,font:{center:35,conn:28},color:{background:"#ffffff",foreground:"#000000"}}},C={class_name:"Element",disp:"ru_el_notation",display_name:!0,adder_name_array:['%<svg width="100" height="40" viewBox="0 0 200 50" xmlns="http://www.w3.org/2000/svg" stroke="currentColor"><path d="M0 50L60 50L60 20" stroke="currentColor" stroke-width="3" fill="none"/><path d="M60 20L140 20" stroke="currentColor" stroke-width="3" fill="none"/><path d="M140 20L140 50L200 50" stroke="currentColor" stroke-width="3" fill="none"/></svg>'],preffix_name_in_connection:"$",suffix_name_in_connection:"",preffix_name_out_connection:"$",suffix_name_out_connection:"",display_in_connections:!1,display_out_connections:!0,display_line_in_connections:!1,display_line_out_connections:!1,rotate:"0",useTheme:!0,sizes:{MarginConn:{v:20,h:0},MarginCenter:{v:17,h:10,vb:10},strokeWidth:3,font:{center:35,conn:28},color:{background:"#ffffff",foreground:"#000000"}}};function O(t){return Object.assign(Object.assign({},t),{sizes:Object.assign(Object.assign({},t.sizes),{MarginConn:Object.assign({},t.sizes.MarginConn),MarginCenter:Object.assign({},t.sizes.MarginCenter),font:Object.assign({},t.sizes.font),color:Object.assign({},t.sizes.color)})})}const F={class_name:"Connection",label_out:"",label_in:"",stroke:3,color:"#000",useTheme:!0,xcIndent:20,minIndent:20};function N(t){return Object.assign({},t)}let j=1,w=t=>{j=t};class G{constructor(t,n,e){this.in=!1,this.out=t,this.state="z",this.style=N(F),n&&(this.state="x",e&&(this.state=e),Array.isArray(n)?this.in=n:this.in=[n])}inConnect(t){return Array.isArray(this.in)?this.in.push(t):this.in=[t],this}disConnect(t){if(Array.isArray(this.in)){for(let n=0;n<this.in.length;n++)if(this.in[n].name===t.name&&this.in[n].element===t.element){this.in.splice(n,1);break}0===this.in.length&&(this.in=!1)}return this}inConnects(t){return Array.isArray(this.in)?this.in.push(...t):this.in=t,this}disConnects(t){if(Array.isArray(this.in))for(let n=0;n<t.length;n++)this.disConnect(t[n]);return this}isConnected(){return Array.isArray(this.in)&&this.in.length>0}lenInConnected(){return Array.isArray(this.in)?this.in.length:0}clone(t){return new G({name:this.out.name,element:t,no_source:this.out.no_source,is_out:!0})}getArrayInString(){const t=[];if(Array.isArray(this.in))for(let n=0;n<this.in.length;n++)t.push(this.in[n].name);return t}findInString(t){if(Array.isArray(this.in))for(let n=0;n<this.in.length;n++)if(this.in[n].element===t)return this.in[n].name;return""}findInSource(t){if(Array.isArray(this.in))for(let n=0;n<this.in.length;n++)if(this.in[n].element===t)return this.in[n]}}class M{constructor(t){this.connectionClass=t}create(t,n){return n?new this.connectionClass(t,n):new this.connectionClass(t)}}const I={Connection:new M(G)};class k{constructor(t,n,e,o){this.delay=[],this.props={},this.in_connections=[],this.out_connections=[],this.state=()=>"",this.name="",this.style=O(E),"string"==typeof t?(this.name=t,n instanceof k&&e instanceof k&&this.concat(n,e),n instanceof Array&&e instanceof Array&&o instanceof Array&&this.setParams(n,e,A(o,n.length,e.length,this.inArray())),n instanceof Array&&e instanceof Array&&"function"==typeof o&&this.setParams(n,e,o)):(t instanceof k&&n instanceof k&&this.concat(t,n),t instanceof Array&&n instanceof Array&&e instanceof Array&&this.setParams(t,n,A(e,t.length,n.length,this.inArray())),n instanceof Array&&e instanceof Array&&"function"==typeof o&&this.setParams(n,e,o)),this.delay=Array(this.out_connections.length).fill(j)}setParams(t,n,e){for(let t=0;t<n.length;t++)this.out_connections.push(I.Connection.create({name:n[t],element:this,no_source:t,is_out:!0}));return this.in_connections=t,this.state=e,this}concat(t,n){const e=t.clone(),o=n.clone();if(e.out_connections.length<o.in_connections.length){for(let t=0;t<e.out_connections.length;t++)o.in(o.in_connections[t],e.out_connections[t]);for(let t=0;t<e.in_connections.length;t++)this.in_connections.push(e.in_connections[t]);for(let t=e.out_connections.length;t<o.in_connections.length;t++)this.in_connections.push(o.in_connections[t]);for(let t=0;t<o.out_connections.length;t++)this.out_connections.push(o.out_connections[t])}else{for(let t=0;t<o.in_connections.length;t++)o.in(o.in_connections[t],e.out_connections[t]);for(let t=0;t<o.out_connections.length;t++)this.out_connections.push(o.out_connections[t]);for(let t=o.in_connections.length;t<e.out_connections.length;t++)this.out_connections.push(e.out_connections[t]);for(let t=0;t<e.in_connections.length;t++)this.in_connections.push(e.in_connections[t])}for(let t=0;t<this.out_connections.length;t++)this.out_connections[t]=this.out_connections[t].clone(this);return this}add(t){if(this.in_connections.length<t.out_connections.length){const n=this.in_connections.length;for(let e=0;e<n;e++)this.in(this.in_connections[e],t.out_connections[e])}else for(let n=0;n<t.out_connections.length;n++)this.in(this.in_connections[n],t.out_connections[n]);return this}in(t,n){if(n){let e=-1;for(let o=0;o<this.in_connections.length;o++)if(this.in_connections[o]===t){this.in_connections[o]=n,e=o;break}return n.inConnect({name:t,element:this,no_source:e,is_out:!1}),n}for(let n=0;n<this.in_connections.length;n++)if("string"==typeof this.in_connections[n]){if(this.in_connections[n]===t)return this.in_connections[n]}else if(this.in_connections[n].findInString(this)===t)return this.in_connections[n];return""}inIndex(t){for(let n=0;n<this.in_connections.length;n++)if("string"==typeof this.in_connections[n]){if(this.in_connections[n]===t)return n}else if(this.in_connections[n].findInString(this)===t)return n;return-1}inArray(){const t=[];for(let n=0;n<this.in_connections.length;n++)"string"==typeof this.in_connections[n]?t.push(this.in_connections[n]):t.push(this.in_connections[n].findInString(this));return t}out(t){for(let n=0;n<this.out_connections.length;n++)if(this.out_connections[n].out.name===t)return this.out_connections[n];return{}}clone(){const t=new k;for(let n=0;n<this.out_connections.length;n++)t.out_connections.push(this.out_connections[n].clone(t));for(let n=0;n<this.in_connections.length;n++)"string"==typeof this.in_connections[n]?t.in_connections.push(this.in_connections[n]):t.in_connections.push(this.in_connections[n].findInString(this));return t.state=this.state,t}isAllInConnected(){for(let t=0;t<this.in_connections.length;t++)if("string"==typeof this.in_connections[t])return!1;return!0}inStateArray(){let t="";for(let n=0;n<this.in_connections.length;n++)"string"==typeof this.in_connections[n]?t+="z":t+=this.in_connections[n].state;return t}}class z{constructor(t,n){this.props={},this.delay=[],this.style=O(C),"string"==typeof t&&n?(this.frequency=n,this.out_connections=[I.Connection.create({name:t,element:this,no_source:0,is_out:!0})]):(this.frequency=t,this.out_connections=[I.Connection.create({name:"",element:this,no_source:0,is_out:!0})])}out(t){return t&&t!==this.out_connections[0].out.name&&(this.out_connections[0].out.name=t),this.out_connections[0]}clone(){const t=new z(this.frequency);return t.out(this.out().out.name),t}isAllInConnected(){return!1!==this.out_connections[0].in}inStateArray(){return this.out_connections[0].state}}class T{constructor(t){this.tree=[],this.genGraph(t)}genGraph(t){const n=new Set;this.findGenerators(t,n);const e=[];for(let t=0;t<this.tree.length;t++)this.genGraphNode(this.tree[t],e)}findGenerators(t,n){if(n.add(t),void 0!==t.in_connections){for(let e=0;e<t.in_connections.length;e++)if("string"!=typeof t.in_connections[e]){const o=t.in_connections[e].out.element;n.has(o)||this.findGenerators(o,n)}for(let e=0;e<t.out_connections.length;e++)if(t.out_connections[e].in)for(let o=0;o<t.out_connections[e].in.length;o++){const i=t.out_connections[e].in[o].element;n.has(i)||this.findGenerators(i,n)}}else this.tree.push({element:t,connection:[],out:[]});return this.tree}genGraphNode(t,n){const e=t.element;for(let o=0;o<e.out_connections.length;o++)if(e.out_connections[o].in)for(let i=0;i<e.out_connections[o].in.length;i++){const s=e.out_connections[o].in[i].element,r=n.find((t=>t.element===s));if(r)r.connection.push(e.out_connections[o]),t.out.push(r);else{const i={element:s,connection:[e.out_connections[o]],out:[]};t.out.push(i),n.push(i),this.genGraphNode(i,n)}}}findElement(t){for(let n=0;n<this.tree.length;n++){const e=this.findElementNode(t,this.tree[n]);if(e)return e}return!1}findElementNode(t,n){if(t===n.element)return n;for(let e=0;e<n.out.length;e++){const o=this.findElementNode(t,n.out[e]);if(o)return o}return!1}getElementArrayFromNodeArray(t){const n=[];for(let e=0;e<t.length;e++)n.push(t[e].element);return n}getOutputs(){const t=this.getSetNodeDFS(),n=[];for(let e=0;e<t.length;e++)if(t[e].element.out_connections.length!==t[e].out.length)for(let o=0;o<t[e].element.out_connections.length;o++)t[e].element.out_connections[o].in||n.push(t[e].element.out_connections[o]);return n}getInputs(){const t=this.getSetNodeDFS(),n=[];for(let e=0;e<t.length;e++)if("in_connections"in t[e].element){const o=t[e].element.in_connections;if(o.length!==t[e].out.length)for(let i=0;i<o.length;i++)"string"==typeof o[i]&&n.push({name:o[i],element:t[e].element,no_source:e,is_out:!1})}return n}getGenerators(){return this.getElementArrayFromNodeArray(this.tree)}getAllElementsDFS(){return this.getElementArrayFromNodeArray(this.getSetNodeDFS())}getAllElementsBFS(){return this.getElementArrayFromNodeArray(this.getAllNodeBFS())}getAllNodeDFS(){const t=[];for(let n=0;n<this.tree.length;n++)this.DFSrec(this.tree[n],t);return t}DFSrec(t,n){n.push(t);for(let e=0;e<t.out.length;e++)this.DFSrec(t.out[e],n)}getConnectionsNode(t){const n=[];for(let e=0;e<t.element.out_connections.length;e++)t.element.out_connections[e].in&&n.push(t.element.out_connections[e]);return n}getAllNodeBFS(){const t=[...this.tree],n=this.getSetNodeDFS(),e=[];for(;n.length>0;)for(let o=0;o<n.length;o++)if(t.find((t=>t===n[o])))n.splice(o,1),o--;else{let i=!0;for(let e=0;e<n[o].connection.length;e++)if(!t.find((t=>t.element===n[o].connection[e].out.element))){i=!1;break}i&&(t.push(n[o]),e.push(...n[o].connection),n.splice(o,1),o--)}return t}getSetNodeDFS(){return this.getAllNodeDFS().filter(((t,n,e)=>e.indexOf(t)===n))}getDataElementGraph(){const t=this.getAllNodeBFS(),n=this.getElementArrayFromNodeArray(t),e=[];for(let o=0;o<t.length;o++){if(e.push({name:t[o].element.name?t[o].element.name:"",id:o,connections_in:[],connections_out:[]}),t[o].element.in_connections){const i=t[o].element.in_connections;for(let s=0;s<i.length;s++)"string"==typeof i[s]?e[o].connections_in.push({conn_name:i[s],id:-1}):e[o].connections_in.push({conn_name:i[s].findInString(t[o].element),id:n.indexOf(i[s].out.element)})}for(let i=0;i<t[o].element.out_connections.length;i++){const s=[];if(t[o].element.out_connections[i].in)for(let e=0;e<t[o].element.out_connections[i].in.length;e++)s.push(n.indexOf(t[o].element.out_connections[i].in[e].element));e[o].connections_out.push({conn_name:t[o].element.out_connections[i].out.name,id:s})}}const o=[];for(let t=0;t<this.tree.length;t++)this.recExportElementGraph(this.tree[t],o,n);return{elements:e,elementGraph:o}}recExportElementGraph(t,n,e){const o=e.indexOf(t.element);n.push({id:o,out:[]});for(let o=0;o<t.out.length;o++)this.recExportElementGraph(t.out[o],n[n.length-1].out,e)}}return n})(),t.exports=n()}},n={};function e(o){var i=n[o];if(void 0!==i)return i.exports;var s=n[o]={exports:{}};return t[o].call(s.exports,s,s.exports,e),s.exports}e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{"use strict";e.r(o),e.d(o,{Model:()=>i});class t{constructor(t,n){this.queue={},this.priorities=[],t instanceof Array&&n instanceof Array?t.forEach(((t,e)=>this.push(t,n[e]))):t&&n&&this.push(t,n)}push(t,n){if(!this.queue[n]){this.queue[n]=[];let t=!1;for(let e=this.priorities.length-1;e>=0;e--)if(this.priorities[e]<n){this.priorities.splice(e+1,0,n),t=!0;break}t||this.priorities.unshift(n)}this.queue[n].push(t)}pop(){if(this.isEmpty())return;const t=this.priorities[0],n=this.queue[t].shift();return 0===this.queue[t].length&&(delete this.queue[t],this.priorities.shift()),n?{time:t,signal:n}:void 0}isEmpty(){return 0===this.priorities.length}}var n=e(680);class i{constructor(e,o,i=!0){"string"==typeof e.name?this.graph=new n.ElementGraph(e):this.graph=e,this.lastTime=o,this.queue=new t,this.modelGenerators(),this.runModel(),i&&this.optimizeTetModel()}modelGenerators(){this.graph.tree.forEach((t=>{let n=0,e=1,o=1/(2*t.element.frequency);if(t.element.out_connections[0].in)for(;n<=this.lastTime;)e=1===e?0:1,t.element.out_connections[0].state=e,t.element.out_connections[0].in.forEach((t=>{this.queue.push({element:t.element,no_source:t.no_source,signal:e},n)})),this.tetElementOut(t.element,0,n),n+=o}))}pushConnection(t,n,e){let o=t.state;this.tetElementOut(t.out.element,t.out.no_source,n+e),t.in&&t.in.forEach((t=>{this.queue.push({element:t.element,no_source:t.no_source,signal:o},n+e)}))}pushTet(t,n){if(t.props.tet){let e=!0;for(let o=t.props.tet.length-1;o>=0;o--){const i=t.props.tet[o];if(i.time<n.time){e=!1,t.props.tet.splice(o+1,0,n);break}if(i.time===n.time){e=!1,t.props.tet[o]=n;break}}e&&t.props.tet.unshift(n)}else t.props.tet=[n]}tetElementOut(t,n,e){let o;t.state?(o=t.state(t.inStateArray()),o=o.substring(0,n)+t.out_connections[n].state+o.substring(n+1)):o=t.out_connections[n].state,this.pushTet(t,{time:e,state:o})}runModel(){for(;!this.queue.isEmpty();){let t=this.queue.pop();if(t&&t.time<=this.lastTime&&t.signal.element.in_connections&&"string"!=typeof t.signal.element.in_connections[t.signal.no_source]&&t.signal.element.state){t.signal.element.in_connections[t.signal.no_source].state=t.signal.signal;let n=t.signal.element.state(t.signal.element.inStateArray());t.signal.element.out_connections.forEach(((e,o)=>{e.state=n[o],this.pushConnection(e,t.time,t.signal.element.delay[o])}))}}}optimizeTetModel(){this.graph.getAllElementsDFS().forEach((t=>{t.props.tet&&(t.props.tet=this.optimizeTet(t.props.tet))}))}optimizeTet(t){let n=[];for(let e=t.length-1;e>=0;e--){let o=t[e];if(o.time=parseFloat(o.time.toFixed(14)),n.length>0){let t=n[0];t.time!==o.time&&(o.state===t.state?n[0].time=o.time:n.unshift(o))}else n.unshift(o)}return n}exportConnection(t){let n=[];return t.out.element.props.tet&&t.out.element.props.tet.forEach((e=>{n.push({time:e.time,state:e.state[t.out.no_source]})})),this.optimizeTet(n)}}})(),o})()));